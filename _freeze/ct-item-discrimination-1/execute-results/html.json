{
  "hash": "0504e70d05fbb1c693653064a10bcb3c",
  "result": {
    "markdown": "# Item Discrimination\nThe more an item discriminates among individuals with different amounts of the underlying concept of interest, the higher the discrimination index.\n\n\n\n\n\n## The extreme group method (@cappelleri)\n### Step 1\nPartition respondents who have the highest and lowest overall scores on the overall scale, aggregated across all items, into upper and lower groups. The upper group can be composed of the top x% (e.g., 25%) of scores on the scale, while the lower group can be composed of the bottom x% (e.g., 25%) of scores on the scale.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculate the total score for each respondent\nresponses <- responses %>% \n  mutate(total = rowSums(pick(ends_with('_score')),na.rm=TRUE)) \n\n# partition the respondents into 4 quartiles based on their total score\nresponses <- responses %>% \n  mutate(quartile = cut(total,quantile(total,probs=c(0,0.25,0.5,0.75,1)),labels=c('Q1','Q2','Q3','Q4'),include.lowest=TRUE))\n\n# double check\nresponses %>% \n  group_by(quartile) %>% \n  summarise(mean_score = mean(total))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  quartile mean_score\n  <fct>         <dbl>\n1 Q1             7.20\n2 Q2            11.0 \n3 Q3            13.9 \n4 Q4            17.8 \n```\n:::\n\n```{.r .cell-code}\nitems <- responses %>% select(quartile, ends_with('_score'))\n# pivot the items longer for analysis\nitems <- items %>% pivot_longer(-quartile, names_to = 'item', values_to = 'score')\n```\n:::\n\n\n### Step 2\nExamine each item and determine the proportion of individual respondents in the sample who correctly respond to each item in the upper group and lower group.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create a summary table with item stats\nitem_stats <- items %>% \n  group_by(quartile, item) %>%\n  summarise(mean_score = mean(score, na.rm=TRUE))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'quartile'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n# pivot wider so we have the item stats for each quartile\nitem_wide_stats <- item_stats %>% \n  pivot_wider(names_from = quartile, values_from = mean_score)\n\nitem_wide_stats <- item_wide_stats %>% mutate(\n    item_name = factor(item, levels=paste('Q',1:20, '_score',sep=''),labels = paste0('Q',1:20),ordered = TRUE)\n    ) %>% arrange(item_name) \n\nitem_wide_stats <- item_wide_stats %>% select(\n    item_name, \n    Q1 = `Q1`, \n    Q2 = `Q2`, \n    Q3 = `Q3`, \n    Q4 = `Q4`\n    )\n```\n:::\n\n\n### Step 3\nSubtract the pair of proportions noted in Step 2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nitem_wide_stats <- item_wide_stats %>% mutate(\n    Q1_Q4 = Q4 - Q1,\n    )\nknitr::kable(item_wide_stats, digits=2)\n```\n\n::: {.cell-output-display}\n|item_name |   Q1|   Q2|   Q3|   Q4| Q1_Q4|\n|:---------|----:|----:|----:|----:|-----:|\n|Q1        | 0.85| 0.98| 0.99| 1.00|  0.14|\n|Q2        | 0.79| 0.97| 0.99| 1.00|  0.21|\n|Q3        | 0.33| 0.65| 0.82| 0.95|  0.62|\n|Q4        | 0.82| 0.97| 0.99| 1.00|  0.18|\n|Q5        | 0.74| 0.93| 0.96| 1.00|  0.26|\n|Q6        | 0.08| 0.22| 0.52| 0.90|  0.83|\n|Q7        | 0.08| 0.15| 0.35| 0.81|  0.73|\n|Q8        | 0.06| 0.14| 0.44| 0.86|  0.79|\n|Q9        | 0.21| 0.48| 0.85| 0.98|  0.77|\n|Q10       | 0.48| 0.83| 0.92| 0.98|  0.50|\n|Q11       | 0.57| 0.84| 0.95| 0.98|  0.41|\n|Q12       | 0.22| 0.50| 0.82| 0.96|  0.75|\n|Q13       | 0.41| 0.66| 0.78| 0.92|  0.51|\n|Q14       | 0.39| 0.73| 0.89| 0.96|  0.57|\n|Q15       | 0.05| 0.07| 0.13| 0.54|  0.49|\n|Q16       | 0.09| 0.13| 0.32| 0.79|  0.70|\n|Q17       | 0.31| 0.52| 0.62| 0.85|  0.53|\n|Q18       | 0.40| 0.64| 0.71| 0.83|  0.43|\n|Q19       | 0.06| 0.09| 0.26| 0.77|  0.71|\n|Q20       | 0.36| 0.54| 0.60| 0.77|  0.42|\n:::\n:::\n\n\n\n## Interpretation\nThe higher the item discrimination index, the more the item discriminates. For example, if 60% of the upper group and 25% of the lower group endorse a particular item in the scale, the item discrimination index for that item would be calculated as (0.60−0.25) = 0.35.\n\n## Extension Exercise\nTry and recreate the item discrimination plot [here](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4096146/)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}