{
  "hash": "4161f64a3fbe105d5c5c5aa7303201fd",
  "result": {
    "markdown": "## Working with demographic data\nIn our dataset we have the the variable gender. Let's examine what sort of variable gender is.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list=ls())\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\n# load in the dataset\nresponses <- read_csv('data/responses.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 3061 Columns: 45\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (23): id, gender, dob, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12...\ndbl (22): yg, missing, Q1_score, Q2_score, Q3_score, Q4_score, Q5_score, Q6_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# What class of variable is gender in the dataset?\nprint(class(responses$gender))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n:::\n\n\nTo work with demographic data we need to convert the variable to a factor. We can do this using the factor function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# List all the permutations of gender in the dataset\nprint(unique(responses$gender))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"F\" \"M\" NA \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresponses <- responses %>% \n  mutate_at(vars(gender), factor, levels=c('M','F'),labels=c('Male','Female'))\n```\n:::\n\n\n## What are the proportions of Male / Female in the dataset?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::kable(responses %>%\n  group_by(gender) %>%\n  summarise(n = n()) %>%\n  mutate(freq = n / sum(n)), digits = 2)\n```\n\n::: {.cell-output-display}\n|gender |    n| freq|\n|:------|----:|----:|\n|Male   | 1527| 0.50|\n|Female | 1512| 0.49|\n|NA     |   22| 0.01|\n:::\n:::\n\n\n## Remove the missing data for simplicity\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Remove the missing data for simplicity\nresponses <- responses %>% drop_na(gender)\n```\n:::\n\n\n## Now go back to the Test Information and produce a table and a histogram by gender\n**What do you learn from the grouped information?**\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}