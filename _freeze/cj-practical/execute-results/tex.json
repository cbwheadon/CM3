{
  "hash": "7f3a37e0e4097e1271fbfbe94dbcf6ec",
  "result": {
    "markdown": "# Comparative Judgement Practical\n\nCreate a new Comparative Judgement task on [www.nomoremarking.com](www.nomoremarking.com) and upload 8 pdfs with the numbers 1 to 8. Judge the numbers 80 times and download the decisions file.\n\n## Fitting the Bradley-Terry Model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list=ls())\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(sirt)\nrequire(nmmBtm)\ndecisions <- read_csv('data/decisions-1.csv')\npersons <- read_csv('data/persons-1.csv')\nglimpse(decisions)\nglimpse(persons)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# get the person ids and their first names\npersons <- persons %>% \n  select(Code, `First Name`) %>% \n  rename(id = Code, name = `First Name`)\n\n#Â go through the decisions and add a column with the name of the person who was chosen or not chosen in each case\ndecisions <- decisions %>% left_join(persons, by = c('chosen' = 'id')) %>% \n  rename(chosenName = name) %>% \n  left_join(persons, by = c('notChosen' = 'id')) %>% \n  rename(notChosenName = name)\n\n# mutate chosenName and notChosenName to be factors\ndecisions <- decisions %>% \n  mutate(chosenName = factor(chosenName), notChosenName = factor(notChosenName))\n\n# create a name for each judge\ndecisions <- decisions %>% mutate(\n    judge = paste0('judge_', judgeName)\n)\n\n# get a vector of judges\njudges <- decisions %>% pull(judge)\n\n# format for the btm model\ndecisions <- decisions %>% \n  select(chosenName, notChosenName) %>% \n  mutate(result = 1)\n\n# the package doesn't like tibbles?\ndecisions <- as.data.frame(decisions)\nmod1 <- btm(decisions, judge=judges, fix.eta = 0, ignore.ties = TRUE, eps = 0.3)\n```\n:::\n\n\n\n\n## Explore the model results\nSee <https://alexanderrobitzsch.github.io/sirt/reference/btm.html>\n\n### Reliability\n### Person parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# The mle reliability, also known as separation reliability\nprint(mod1$mle.rel)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8900993\n```\n:::\n\n```{.r .cell-code}\n# The person parameters\nknitr::kable(mod1$effects, digits = 2)\n```\n\n::: {.cell-output-display}\n|   | individual| id| Ntot| N1| ND| N0| raw| score| propscore| theta| se.theta| outfit| infit|\n|:--|----------:|--:|----:|--:|--:|--:|---:|-----:|---------:|-----:|--------:|------:|-----:|\n|8  |          8|  8|   24| 24|  0|  0|  24| 23.70|      0.99|  6.42|     1.86|   0.01|  0.05|\n|7  |          7|  7|   21| 17|  0|  4|  17| 16.81|      0.80|  3.56|     1.38|   0.04|  0.19|\n|6  |          6|  6|   20| 16|  0|  4|  16| 15.82|      0.79|  2.65|     1.15|   0.05|  0.19|\n|5  |          5|  5|   20| 12|  0|  8|  12| 11.94|      0.60|  0.81|     1.04|   0.06|  0.13|\n|4  |          4|  4|   20|  7|  0| 13|   7|  7.09|      0.35| -0.91|     1.17|   0.05|  0.16|\n|3  |          3|  3|   19|  4|  0| 15|   4|  4.17|      0.22| -2.01|     1.16|   0.05|  0.15|\n|2  |          2|  2|   21|  3|  0| 18|   3|  3.21|      0.15| -4.10|     1.21|   0.04|  0.10|\n|1  |          1|  1|   21|  0|  0| 21|   0|  0.30|      0.01| -6.41|     1.92|   0.02|  0.09|\n:::\n\n```{.r .cell-code}\n# The judge fit\n# Fit statistics (outfit and infit) for judges if judge is provided. In addition, average agreement of the rating with the mode of the ratings is calculated for each judge (at least three ratings per dyad has to be available for computing the agreement)\nknitr::kable(mod1$fit_judges, digits = 2)\n```\n\n::: {.cell-output-display}\n|        |judge   | outfit| infit| agree|\n|:-------|:-------|------:|-----:|-----:|\n|judge_1 |judge_1 |   0.06|  0.23|     1|\n|judge_2 |judge_2 |   0.02|  0.09|     1|\n|judge_3 |judge_3 |   0.05|  0.14|     1|\n|judge_4 |judge_4 |   0.04|  0.11|     1|\n|judge_5 |judge_5 |   0.02|  0.13|     1|\n|judge_6 |judge_6 |   0.08|  0.27|     1|\n|judge_7 |judge_7 |   0.03|  0.08|     1|\n|judge_8 |judge_8 |   0.03|  0.08|     1|\n|judge_9 |judge_9 |   0.03|  0.07|     1|\n:::\n:::\n\n\n\n## Visualise the person parameters (model effects) along with the standard error\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot the model effects with the standard errors\n# add a column to the person parameters with the upper and lower limits using 1.96 * standard error\neffects <- mod1$effects %>% \n  mutate(\n    lower = theta - 1.96 * se.theta,\n    upper = theta + 1.96 * se.theta\n  )\n\np <- ggplot(effects, aes(x = individual, y = theta)) +\n  geom_point() +\n  geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +\n  theme_bw() +\n  labs(x = 'Person parameter', y = 'Person')\nprint(p)\n```\n\n::: {.cell-output-display}\n![](cj-practical_files/figure-pdf/person-parameters-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n## Inspect the model probabilities\n## What is p1? p0? pD?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(mod1$probs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            p1           p0           pD\n[1,] 0.9963473 0.0036526689 6.100379e-45\n[2,] 0.9998848 0.0001151765 1.085183e-45\n[3,] 0.7509258 0.2490741530 4.373299e-44\n[4,] 0.9906881 0.0093119089 9.712569e-45\n[5,] 0.9099456 0.0900544355 2.894720e-44\n[6,] 0.9959516 0.0040483851 6.421054e-45\n```\n:::\n:::\n\n\n\n## Extension exercises\n*    Try some less accurate judging. Note the impace on the model parameters.\n*    Can you recreate the model probabilities?\n\n",
    "supporting": [
      "cj-practical_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}