{
  "hash": "90b5b003743fd76d708322a3db5a8b53",
  "result": {
    "markdown": "# Descriptive Data\n\n## Item facility or mean item score\nIn the special case of dichotomous items, scored “0” for one response and “1” for the other, the proportion of respondents in a sample who select the response choice scored “1” is equivalent to the mean item response. Items for which everyone gives the same response are uninformative because they do not differentiate between individuals. In contrast, dichotomous items that yield about an equal number of people (50%) selecting each of the two response options provide the best differentiation between individuals in the sample overall (@cappelleri).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list=ls())\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\n# load in the dataset\nresponses <- read_csv('data/responses.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 3061 Columns: 45\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (23): id, gender, dob, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12...\ndbl (22): yg, missing, Q1_score, Q2_score, Q3_score, Q4_score, Q5_score, Q6_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# select all the columns with _score as the suffix and store as a tibble\nitems <- responses %>% select(ends_with('_score'))\n\n# pivot the items longer for analysis\nitems <- items %>% pivot_longer(cols=starts_with('Q'), names_to = 'item', values_to = 'score')\n\n# create a summary table with item stats\nitem_stats <- items %>% \n  group_by(item) %>%\n  summarise(across(everything(), \n  list(\n    max = ~max(.x, na.rm = TRUE),\n    n = ~sum(!is.na(.x)),\n    mean = ~mean(.x, na.rm = TRUE),\n    sd = ~sd(.x, na.rm = TRUE)))\n)\n\nitem_stats <- item_stats %>% mutate(\n    item_name = factor(item, levels=paste('Q',1:20, '_score',sep=''),labels = paste0('Q',1:20),ordered = TRUE)\n)\n\nitem_stats <- item_stats %>% arrange(item_name) %>%\n    select(\n        item_name,\n        score_max,\n        score_n,\n        score_mean,\n        score_sd\n    ) %>% rename(\n        Item = item_name,\n        Max = score_max,\n        N = score_n,\n        Mean = score_mean,\n        SD = score_sd\n    )\n\n# display the summary table\nknitr::kable(item_stats, digits=2)\n```\n\n::: {.cell-output-display}\n|Item | Max|    N| Mean|   SD|\n|:----|---:|----:|----:|----:|\n|Q1   |   1| 3049| 0.95| 0.22|\n|Q2   |   1| 3039| 0.93| 0.25|\n|Q3   |   1| 3049| 0.66| 0.47|\n|Q4   |   1| 3050| 0.94| 0.24|\n|Q5   |   1| 3050| 0.90| 0.30|\n|Q6   |   1| 3047| 0.39| 0.49|\n|Q7   |   1| 3037| 0.31| 0.46|\n|Q8   |   1| 3039| 0.33| 0.47|\n|Q9   |   1| 3046| 0.59| 0.49|\n|Q10  |   1| 3046| 0.79| 0.41|\n|Q11  |   1| 3043| 0.82| 0.38|\n|Q12  |   1| 3040| 0.59| 0.49|\n|Q13  |   1| 3036| 0.67| 0.47|\n|Q14  |   1| 3045| 0.72| 0.45|\n|Q15  |   1| 3042| 0.18| 0.38|\n|Q16  |   1| 3039| 0.30| 0.46|\n|Q17  |   1| 3039| 0.55| 0.50|\n|Q18  |   1| 3022| 0.63| 0.48|\n|Q19  |   1| 3036| 0.26| 0.44|\n|Q20  |   1| 3034| 0.55| 0.50|\n:::\n:::\n\n\n## What do we learn from the item facility table?\n## Plot the items by item difficulty in ascending order of difficulty\n## Plot the items by item difficulty in ascending order of difficulty for males, with the data grouped by gender\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}