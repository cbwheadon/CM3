{
  "hash": "9923e449e193b4b62b15a75725dee64a",
  "result": {
    "markdown": "# Linking & Equating\n\nWhenever you calibrate a Rasch model or a CJ model the scale you use is arbitrary. That means that you cannot compare two separate CJ or Rasch calibrations as the scales they use will be different. To place two calibrations on the same scale you need to link them with common items. \n\nTo illustrate this point, the dataset decisions-2 has the decisions from a CJ session with the numbers 3 to 8. Fit the Bradley-Terry model to decisions-1 and decisions-2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list=ls())\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(sirt)\nrequire(nmmBtm)\nlibrary(ggrepel)\ndecisions_1 <- read_csv('data/decisions-1.csv')\npersons_1 <- read_csv('data/persons-1.csv')\ndecisions_2 <- read_csv('data/decisions-2.csv')\npersons_2 <- read_csv('data/persons-2.csv')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_btm_model <- function(persons, decisions, anchors=NULL){\n\n    # get the person ids and their first names\n    persons <- persons %>% \n    select(Code, `First Name`) %>% \n    rename(id = Code, name = `First Name`)\n\n    #Â go through the decisions and add a column with the name of the person who was chosen or not chosen in each case\n    decisions <- decisions %>% left_join(persons, by = c('chosen' = 'id')) %>% \n    rename(chosenName = name) %>% \n    left_join(persons, by = c('notChosen' = 'id')) %>% \n    rename(notChosenName = name)\n\n    # mutate chosenName and notChosenName to be factors\n    decisions <- decisions %>% \n    mutate(chosenName = factor(chosenName), notChosenName = factor(notChosenName))\n\n    # format for the btm model\n    decisions <- decisions %>% \n    select(chosenName, notChosenName) %>% \n    mutate(result = 1)\n\n    # the package doesn't like tibbles?\n    decisions <- as.data.frame(decisions)\n    mod1 <- btm(decisions, fix.theta = anchors, fix.eta = 0, ignore.ties = TRUE, eps = 0.3)\n    return (mod1)\n\n}\n\nmdl1 <- fit_btm_model(persons_1, decisions_1)\nmdl2 <- fit_btm_model(persons_2, decisions_2)\n```\n:::\n\n\n## Comparing the model effects\nPlot the relationship between the model effects for decisions-1 against decisions-2. What do you notice?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get the model effects for the two models\neffects_1 <- mdl1$effects\neffects_2 <- mdl2$effects\ncombined_effects <- effects_1 %>% left_join(effects_2, by = c('individual'))\n\n# plot the model effects.x against model effects.y\np <- combined_effects %>%\n    ggplot(aes(x = theta.x, y = theta.y, label=individual)) +\n    geom_point() +\n    geom_text_repel() +\n    geom_abline(intercept = 0, slope = 1, color = 'red') +\n    labs(x = 'Model effects for decisions-1', y = 'Model effects for decisions-2') +\n    theme_bw()\nprint(p)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_text_repel()`).\n```\n:::\n\n::: {.cell-output-display}\n![](cj-equating_files/figure-html/btm-2-1.png){width=672}\n:::\n:::\n\n\n## How do we place the two models on the same scale?\nWe can fix some of the item parameters between the calibrations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# fix the item parameters for numbers 3, 5 & 7\nanchors <- c(-2.0130565,0.8080052,3.5605796)\nnames(anchors) <- c('3','5','7')\n\nmdl3 <- fit_btm_model(persons_2, decisions_2, anchors)\n```\n:::\n\n\n## Now compare the model effects between model 1 and model 3\n\n\n::: {.cell}\n\n```{.r .cell-code}\neffects_3 <- mdl3$effects\ncombined_effects <- effects_1 %>% left_join(effects_3, by = c('individual'))\n\n# plot the model effects.x against model effects.y\np <- combined_effects %>%\n    ggplot(aes(x = theta.x, y = theta.y, label=individual)) +\n    geom_point() +\n    geom_text_repel() +\n    geom_abline(intercept = 0, slope = 1, color = 'red') +\n    labs(x = 'Model effects for  model 1', y = 'Model effects for model 2') +\n    theme_bw()\nprint(p)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_text_repel()`).\n```\n:::\n\n::: {.cell-output-display}\n![](cj-equating_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## With the scales on the same scale we can now build scales across time & space\n\n*    <https://observablehq.com/@nomoremarking/linking-standards-with-comparative-judgement>\n*    <https://observablehq.com/@nomoremarking/the-development-of-writing-ability>\n\n## Extension exercise\nTry different equating designs for different sets of numbers. eg. Try equating 1 to 8 with 6 to 13. How well does it work?",
    "supporting": [
      "cj-equating_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}