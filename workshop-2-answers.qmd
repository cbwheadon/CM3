# Workshop 2 Answers

```{r}
#| include: true
#| echo: true
#| output: false
#| warning: false
rm(list=ls())
library(tidyverse)
library(dexter)
# load in the dataset
responses <- read_csv('data/maths/responses.csv')
responses <- responses %>% filter(!is.na(gender))
keys <- read_csv('data/maths/key.csv')
# Create the rules
rules <- keys_to_rules(keys, include_NA_rule = TRUE)
db <- start_new_project(rules, db_name = ":memory:", person_properties=list(gender=""))

# Add item properties
properties <- read_csv('data/maths/properties.csv')
add_item_properties(db, item_properties = properties, default_values = NULL)

add_booklet(db, responses, "maths-workshop") 
#| label: tbl-test
#| tbl-cap: Test statistics
# check the number of items, the persons and the max score
get_booklets(db)
knitr::kable(get_booklets(db), digits = 2)
# get the item scores for later use in other packages
item_scores <- get_resp_matrix(db)
item_scores <- as_tibble(item_scores)
item_scores <- item_scores %>% select(
    Q1,
    Q2,
    Q3,
    Q4,
    Q5,
    Q6,
    Q7,
    Q8,
    Q9,
    Q10,
    Q11,
    Q12,
    Q13,
    Q14,
    Q15
)
```

## Summary item analysis
```{r}
#| label: tbl-item-summary
#| tbl-cap: item summary
# produce the item tables
tt = tia_tables(db)
knitr::kable(tt$booklets, digits = 2)
## save the output so you can open it in Excel
write_csv(tt$booklets, file='tables/booklets.csv')
```

## Item descriptive stats
```{r}
#| label: tbl-items
#| tbl-cap: Item statistics
# get the item descriptive stats
knitr::kable(tt$items, digits = 2)
## save the output so you can open it in Excel
write_csv(tt$items, file='tables/items.csv')
```

## Distractor analysis

```{r}
#| warning: false
# Look at all the distractor plots
n_items <- nrow(keys)
for(i in 1:n_items){
  distractor_plot(db, keys$item_id[i])
}
```

The item test correlations in @tbl-items suggest an issue with item 10. Let's look at the distractor plot for that item @fig-item10.

```{r}
#| label: fig-item10
#| fig-cap: Item 10
# produce the distractor plots
# Look at distractor plots for all items
# Something is odd about Q10, so let's look at the distractor plot for that item
distractor_plot(db, 'Q10')
```

## Rasch analysis
```{r}
#| echo: true
#| output: false
#| warning: false
# run a traditional Rasch analysis using the item scores produced above
library(TAM)
# All the results of the Rasch analysis are stored in the object called "mod1"
mod1 <- TAM::tam.jml(item_scores)
summary(mod1)
```

```{r}
#| label: tbl-item-difficulties
#| tbl-cap: Item Difficulties
knitr::kable(mod1$item1)
```

```{r}
#| label: tbl-item-difficulties-summary
#| tbl-cap: Item Difficulties Summary
summary(mod1$item1$xsi)
```

```{r}
#| label: tbl-person-abilities-summary
#| tbl-cap: Person Abilities Summary
summary(mod1$theta)
```

```{r}
#| label: fig-wright-map
#| fig-cap: Wright Map
library(WrightMap)
wrightMap(mod1$theta, mod1$xsi, item.side = itemClassic)
```

```{r}
#| label: fig-all-ICCs
#| fig-cap: ICCs for all items
plot(mod1,items = c(1:10))
```

```{r}
#| label: fig-Q10
#| fig-cap: ICC for Q10
plot(mod1,items = c(10))
```

```{r}
#| label: tab-item-fit
#| fig-cap: Item Fit Statistics
fit1 <- tam.jml.fit(mod1,trim_val = NULL)
item_fit <- tibble(fit1$fit.item)
item_fit <- item_fit %>% bind_cols(mod1$item1)
knitr::kable(item_fit, digits = 2)
```

```{r}
#| label: fig-bubble-plot
#| fig-cap: Rasch Bubble Plot

# plot the item infit against the item difficulty
p <- ggplot(item_fit, aes(x=infitItem, y=xsi, size=se.xsi,label=item))
p <- p + geom_point()
p <- p + geom_text(data=item_fit %>% filter(infitItem>1.1),aes(x=infitItem, y=xsi,label=item,size=4),nudge_y=0.15, nudge_x = -0.005)
print(p)
```

```{r}
#| label: fig-bubble-plot-outfit
#| fig-cap: Rasch Bubble Plot Using Outfit

# plot the item outfit against the item difficulty
p <- ggplot(item_fit, aes(x=outfitItem, y=xsi, size=se.xsi,label=item))
p <- p + geom_point()
p <- p + geom_text(data=item_fit %>% filter(outfitItem>1.1),aes(x=outfitItem, y=xsi,label=item,size=4),nudge_y=0.15, nudge_x = -0.005)
print(p)
```

## DIF
```{r}
#| label: fig-profile-analysis
#| fig-cap: DIF using proportion correct
item_scores <- item_scores %>% mutate(gender = responses$gender)
long_responses <- item_scores %>% pivot_longer(cols = Q1:Q15, names_to = "question", values_to = "score")
long_responses <- long_responses %>% mutate(gender = factor(gender))
long_responses <- long_responses %>% mutate(question = factor(question))

response_summary <- long_responses %>% 
  group_by(gender, question) %>%
  summarise(mean_score = mean(score,na.rm=TRUE))

question_difficulty <- response_summary %>%
  filter(gender=='F') %>% 
  arrange(mean_score) %>% pull(question)

ordered_responses <- response_summary %>% mutate(item = factor(question, levels=question_difficulty, ordered=TRUE))
ordered_responses <- ordered_responses %>% mutate(
  gender = factor(gender)
)

p <- ggplot(ordered_responses, aes(x=item, y=mean_score, group=gender, colour=gender, line_style=gender))
p <- p + geom_line() # rotate the x-axis labels
p <- p + theme_light()
p <- p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p

```